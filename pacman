from OpenGL.GLUT import *
from OpenGL.GLU import *
from OpenGL.GL import *
import sys
import CameraPac
import random 

name = 'Example'
WINDOW_WIDTH = 400
WINDOW_HEIGHT = 400

cam = CameraPac.Camera()
xrot = cam.rotateX
yrot = cam.rotateY
zrot = cam.rotateZ
zPersp = cam.positionZ

def main():
  glutInit(sys.argv)
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
	glutInitWindowSize(WINDOW_WIDTH, WINDOW_HEIGHT)
	glutCreateWindow(name)




	light_diffuse = (1, 1, 1, 1)
	light_position = (.5, 1, .5, 1)
	glLightfv(GL_LIGHT0, GL_DIFFUSE, light_diffuse)
	glLightfv(GL_LIGHT0, GL_POSITION, light_position)
	light_ambient = (1., 1., .0, 1)
	light_position = (1, 0, 1, 0)
	glLightfv(GL_LIGHT1, GL_AMBIENT, light_ambient)
	glLightfv(GL_LIGHT1, GL_POSITION, light_position)

	glEnable(GL_LIGHTING)
	glEnable(GL_LIGHT0)
	glEnable(GL_LIGHT1)

	glutDisplayFunc(display)
	#glutIdleFunc(display)
	glutKeyboardFunc(keyPressed)		
	glutMainLoop()




def display(x=0, y=0):
	glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
	cam.renderCamera()
	#glColor(.8, .8, .0)
	
	#glBegin(GL_TRIANGLES)
	#glColor(0, 0, 0)
	#glVertex3f(.2, 0, 0)
	#glVertex3f(.7, .4, 0)
	#glVertex3f(0.7, -.4, 0)
	#glEnd()
	pacMan(.5)
	#glFlush()
	


	#glTranslate(.0, .1, .0) 
	#glRotate(180, 1, 1, 1)
	#glTranslate(.4, .4, .4)
	#glutSolidCone(.2, .6, 40, 40)
	#glTranslate(-.2, -.2, -.2)

	#glutSolidSphere(.1, 40, 40)
	#glTranslate(-.2,-.2, -.2)
	#glRotate(-180, 1, 1, 1)

def pacMan(size):
	glutSolidSphere(size+.02, 30, 30)
	#glColor(.0, .0, .0) 
	glRotate(26, 1, 1, 1)
	print random.random()*100
	if random.random()%3!=0:
		triPrism(size)
		
	glRotate(-26, 1, 1, 1)
	glFlush()	
	#glRotate(-26, 1, 1, 1)
	glLoadIdentity()
	glutSolidSphere(size, 30, 30)

def triPrism(size):

	#back endcap
	glBegin(GL_TRIANGLES )
	glColor(0, 0, 0)
   	glVertex3f(size, 0, 0)
	glVertex3f(0, -size, 0)
	glVertex3f(0, -size, 0)
	glEnd()

    # front endcap
	glBegin(GL_TRIANGLES)
	glColor(0, 0, 0)
   	glVertex3f(size, 0, size)
	glVertex3f(0, 0, size)
	glVertex3f(0, -size , size)
	glEnd()

	#bottom
	glBegin(GL_QUADS)
	glColor(0, 0, 0)
	glVertex3f(0, 0, 0)
	glVertex3f(size, 0, 0)
	glVertex3f(size, 0, size)
	glVertex3f(0, 0, size)
	glEnd()

	#back
	glBegin(GL_QUADS)
	glColor(0, 0, 0)
   	glVertex3f(0, 0, 0)
	glVertex3f(0, -size, 0)
	glVertex3f(0, -size, size)
	glVertex3f(0, 0, size)
	glEnd()

	#top
	glBegin(GL_QUADS)
	glColor(0, 0, 0)
	glVertex3f(0, -size, 0)
	glVertex3f(size, 0, 0)
	glVertex3f(size, 0, size)
	glVertex3f(0, -size, size)
	glEnd()

def keyPressed( key, x, y):
	print "Pressed key: ", key
	cam.keyPressed(key,x,y)
	#if key == 'e':
			#glutSolidSphere(.5, 30, 30)
	xrot = cam.rotateX
	yrot = cam.rotateY
	zrot = cam.rotateZ
	zPersp=cam.positionZ		
				
	display()

if __name__ == '__main__': 
	main()






